plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.palantir.docker' version '0.30.0'
    id 'com.palantir.docker-run' version '0.25.0'
}

group = 'com.personalexpensesmanagment'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.projectlombok:lombok:1.18.20'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation "io.springfox:springfox-boot-starter:3.0.0"
    runtimeOnly 'com.h2database:h2'
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "com.google.guava:guava:11.0.2"

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
}

test {
    useJUnitPlatform()
}

docker {
    name "${project.name}:${project.version}"
    files "build/libs/${bootJar.archiveFileName.get()}"
    buildArgs(["JAR_FILE": bootJar.archiveFileName.get()])
}

dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports "80:8080"
    clean true
}